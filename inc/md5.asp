<%
'本代码由 常州红金羚软件技术有限公司 创建
'创建时间:2014-03-29 13:31:11
'联系信息:QQ：15916190
'请勿修改下列任何代码,以保证程序正常运行

Dim C0C0CC,C0CC00,C0CC0C,C0CCC0,C0CCCC
Set C0CC0C=Response:Set C0CC00=Request:Set C0CCCC=Session:Set C0C0CC=Application:Set C0CCC0=Server
Private Const C0CCC00 =8
Private Const C0CCC0C =4
Private Const C0CCCC0 =32
Private C000000(30)
Private C00000C(30)
Private Function CC0000(CCC000C, CCC00C0)
If CCC00C0 = 0 Then
CC0000 = CCC000C
Exit Function
ElseIf CCC00C0 = 31 Then
If CCC000C And 1 Then
CC0000 = &H80000000
Else
CC0000 = (106 * 96 - 10176)
End If
Exit Function
ElseIf CCC00C0 < 0 Or CCC00C0 > 31 Then
Err.Raise 6
End If
If (CCC000C And C00000C(31 - CCC00C0)) Then
CC0000 = ((CCC000C And C000000(31 - (CCC00C0 + 1))) * C00000C(CCC00C0)) Or &H80000000
Else
CC0000 = ((CCC000C And C000000(31 - CCC00C0)) * C00000C(CCC00C0))
End If
End Function
Private Function CC000C(CCC000C, CCC00C0)
If CCC00C0 = 0 Then
CC000C = CCC000C
Exit Function
ElseIf CCC00C0 = 31 Then
If CCC000C And &H80000000 Then
CC000C = (22 * 20 - 439)
Else
CC000C = (106 * 96 - 10176)
End If
Exit Function
ElseIf CCC00C0 < 0 Or CCC00C0 > 31 Then
Err.Raise 6
End If
CC000C = (CCC000C And &H7FFFFFFE) \ C00000C(CCC00C0)
If (CCC000C And &H80000000) Then
CC000C = (CC000C Or (&H40000000 \ C00000C(CCC00C0 - 1)))
End If
End Function
Private Function CC00C0(CCC000C, CCC00C0)
CC00C0 = CC0000(CCC000C, CCC00C0) Or CC000C(CCC000C, (32 - CCC00C0))
End Function
Private Function CC00CC(CCC00CC, CCC0C00)
Dim C0000C0
Dim C0000CC
Dim C000C00
Dim C000C0C
Dim C000CC0
C000C00 = CCC00CC And &H80000000
C000C0C = CCC0C00 And &H80000000
C0000C0 = CCC00CC And &H40000000
C0000CC = CCC0C00 And &H40000000
C000CC0 = (CCC00CC And &H3FFFFFFF) + (CCC0C00 And &H3FFFFFFF)
If C0000C0 And C0000CC Then
C000CC0 = C000CC0 Xor &H80000000 Xor C000C00 Xor C000C0C
ElseIf C0000C0 Or C0000CC Then
If C000CC0 And &H40000000 Then
C000CC0 = C000CC0 Xor &HC0000000 Xor C000C00 Xor C000C0C
Else
C000CC0 = C000CC0 Xor &H40000000 Xor C000C00 Xor C000C0C
End If
Else
C000CC0 = C000CC0 Xor C000C00 Xor C000C0C
End If
CC00CC = C000CC0
End Function
Private Function CC0C00(C00CCCC, CCC0C0C, CCC0CC0)
CC0C00 = (C00CCCC And CCC0C0C) Or ((Not C00CCCC) And CCC0CC0)
End Function
Private Function CC0C0C(C00CCCC, CCC0C0C, CCC0CC0)
CC0C0C = (C00CCCC And CCC0CC0) Or (CCC0C0C And (Not CCC0CC0))
End Function
Private Function CC0CC0(C00CCCC, CCC0C0C, CCC0CC0)
CC0CC0 = (C00CCCC Xor CCC0C0C Xor CCC0CC0)
End Function
Private Function CC0CCC(C00CCCC, CCC0C0C, CCC0CC0)
CC0CCC = (CCC0C0C Xor (C00CCCC Or (Not CCC0CC0)))
End Function
Private Sub CCCC00(C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC, CCC0CCC, CCCC000)
C0C0C0C = CC00CC(C0C0C0C, CC00CC(CC00CC(CC0C00(C0C0CC0, C0C0CCC, C0CC000), C00CCCC), CCCC000))
C0C0C0C = CC00C0(C0C0C0C, CCC0CCC)
C0C0C0C = CC00CC(C0C0C0C, C0C0CC0)
End Sub
Private Sub CCCC0C(C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC, CCC0CCC, CCCC000)
C0C0C0C = CC00CC(C0C0C0C, CC00CC(CC00CC(CC0C0C(C0C0CC0, C0C0CCC, C0CC000), C00CCCC), CCCC000))
C0C0C0C = CC00C0(C0C0C0C, CCC0CCC)
C0C0C0C = CC00CC(C0C0C0C, C0C0CC0)
End Sub
Private Sub CCCCC0(C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC, CCC0CCC, CCCC000)
C0C0C0C = CC00CC(C0C0C0C, CC00CC(CC00CC(CC0CC0(C0C0CC0, C0C0CCC, C0CC000), C00CCCC), CCCC000))
C0C0C0C = CC00C0(C0C0C0C, CCC0CCC)
C0C0C0C = CC00CC(C0C0C0C, C0C0CC0)
End Sub
Private Sub CCCCCC(C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC, CCC0CCC, CCCC000)
C0C0C0C = CC00CC(C0C0C0C, CC00CC(CC00CC(CC0CCC(C0C0CC0, C0C0CCC, C0CC000), C00CCCC), CCCC000))
C0C0C0C = CC00C0(C0C0C0C, CCC0CCC)
C0C0C0C = CC00CC(C0C0C0C, C0C0CC0)
End Sub
Private Function CCC000(CCCC00C)
Dim C000CCC
Dim C00C000
Dim C00C00C()
Dim C00C0C0
Dim C00C0CC
Dim C00CC00
Const C0CCCCC =512
Const CC00000 =448
C000CCC = Len(CCCC00C)
C00C000 = (((C000CCC + ((C0CCCCC - CC00000) \ C0CCC00)) \ (C0CCCCC \ C0CCC00)) + 1) * (C0CCCCC \ C0CCCC0)
ReDim C00C00C(C00C000 - 1)
C00C0C0 = (106 * 96 - 10176)
C00C0CC = (106 * 96 - 10176)
Do Until C00C0CC >= C000CCC
C00CC00 = C00C0CC \ C0CCC0C
C00C0C0 = (C00C0CC Mod C0CCC0C) * C0CCC00
C00C00C(C00CC00) = C00C00C(C00CC00) Or CC0000(Asc(Mid(CCCC00C, C00C0CC + 1, 1)), C00C0C0)
C00C0CC = C00C0CC + (22 * 20 - 439)
Loop
C00CC00 = C00C0CC \ C0CCC0C
C00C0C0 = (C00C0CC Mod C0CCC0C) * C0CCC00
C00C00C(C00CC00) = C00C00C(C00CC00) Or CC0000(&H80, C00C0C0)
C00C00C(C00C000 - 2) = CC0000(C000CCC, 3)
C00C00C(C00C000 - 1) = CC000C(C000CCC, 29)
CCC000 = C00C00C
End Function
Private Function CCC00C(CCC000C)
Dim C00CC0C
Dim C00CCC0
For C00CCC0 = 0 To 3
C00CC0C = CC000C(CCC000C, C00CCC0 * C0CCC00) And C000000(C0CCC00 - 1)
CCC00C = CCC00C & Right("0" & Hex(C00CC0C), 2)
Next
End Function
Public Function CCC0C0(CCCC00C)
C000000(0) = CLng(1)
C000000(1) = CLng(3)
C000000(2) = CLng(7)
C000000(3) = CLng(15)
C000000(4) = CLng(31)
C000000(5) = CLng(63)
C000000(6) = CLng(127)
C000000(7) = CLng(255)
C000000(8) = CLng(511)
C000000(9) = CLng(1023)
C000000(10) = CLng(2047)
C000000(11) = CLng(4095)
C000000(12) = CLng(8191)
C000000(13) = CLng(16383)
C000000(14) = CLng(32767)
C000000(15) = CLng(65535)
C000000(16) = CLng(131071)
C000000(17) = CLng(262143)
C000000(18) = CLng(524287)
C000000(19) = CLng(1048575)
C000000(20) = CLng(2097151)
C000000(21) = CLng(4194303)
C000000(22) = CLng(8388607)
C000000(23) = CLng(16777215)
C000000(24) = CLng(33554431)
C000000(25) = CLng(67108863)
C000000(26) = CLng(134217727)
C000000(27) = CLng(268435455)
C000000(28) = CLng(536870911)
C000000(29) = CLng(1073741823)
C000000(30) = CLng(2147483647)
C00000C(0) = CLng(1)
C00000C(1) = CLng(2)
C00000C(2) = CLng(4)
C00000C(3) = CLng(8)
C00000C(4) = CLng(16)
C00000C(5) = CLng(32)
C00000C(6) = CLng(64)
C00000C(7) = CLng(128)
C00000C(8) = CLng(256)
C00000C(9) = CLng(512)
C00000C(10) = CLng(1024)
C00000C(11) = CLng(2048)
C00000C(12) = CLng(4096)
C00000C(13) = CLng(8192)
C00000C(14) = CLng(16384)
C00000C(15) = CLng(32768)
C00000C(16) = CLng(65536)
C00000C(17) = CLng(131072)
C00000C(18) = CLng(262144)
C00000C(19) = CLng(524288)
C00000C(20) = CLng(1048576)
C00000C(21) = CLng(2097152)
C00000C(22) = CLng(4194304)
C00000C(23) = CLng(8388608)
C00000C(24) = CLng(16777216)
C00000C(25) = CLng(33554432)
C00000C(26) = CLng(67108864)
C00000C(27) = CLng(134217728)
C00000C(28) = CLng(268435456)
C00000C(29) = CLng(536870912)
C00000C(30) = CLng(1073741824)
Dim C00CCCC
Dim C0C0000
Dim C0C000C
Dim C0C00C0
Dim C0C00CC
Dim C0C0C00
Dim C0C0C0C
Dim C0C0CC0
Dim C0C0CCC
Dim C0CC000
Const CC0000C =7
Const CC000C0 =12
Const CC000CC =17
Const CC00C00 =22
Const CC00C0C =5
Const CC00CC0 =9
Const CC00CCC =14
Const CC0C000 =20
Const CC0C00C =4
Const CC0C0C0 =11
Const CC0C0CC =16
Const CC0CC00 =23
Const CC0CC0C =6
Const CC0CCC0 =10
Const CC0CCCC =15
Const CCC0000 =21
C00CCCC = CCC000(CCCC00C)
C0C0C0C = &H67452301
C0C0CC0 = &HEFCDAB89
C0C0CCC = &H98BADCFE
C0CC000 = &H10325476
For C0C0000 = 0 To UBound(C00CCCC) Step (64 * 26 - 1648)
C0C000C = C0C0C0C
C0C00C0 = C0C0CC0
C0C00CC = C0C0CCC
C0C0C00 = C0CC000
CCCC00 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 0), CC0000C, &HD76AA478
CCCC00 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 1), CC000C0, &HE8C7B756
CCCC00 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 2), CC000CC, &H242070DB
CCCC00 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 3), CC00C00, &HC1BDCEEE
CCCC00 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 4), CC0000C, &HF57C0FAF
CCCC00 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 5), CC000C0, &H4787C62A
CCCC00 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 6), CC000CC, &HA8304613
CCCC00 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 7), CC00C00, &HFD469501
CCCC00 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 8), CC0000C, &H698098D8
CCCC00 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 9), CC000C0, &H8B44F7AF
CCCC00 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 10), CC000CC, &HFFFF5BB1
CCCC00 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 11), CC00C00, &H895CD7BE
CCCC00 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 12), CC0000C, &H6B901122
CCCC00 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 13), CC000C0, &HFD987193
CCCC00 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 14), CC000CC, &HA679438E
CCCC00 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 15), CC00C00, &H49B40821
CCCC0C C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 1), CC00C0C, &HF61E2562
CCCC0C C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 6), CC00CC0, &HC040B340
CCCC0C C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 11), CC00CCC, &H265E5A51
CCCC0C C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 0), CC0C000, &HE9B6C7AA
CCCC0C C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 5), CC00C0C, &HD62F105D
CCCC0C C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 10), CC00CC0, &H2441453
CCCC0C C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 15), CC00CCC, &HD8A1E681
CCCC0C C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 4), CC0C000, &HE7D3FBC8
CCCC0C C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 9), CC00C0C, &H21E1CDE6
CCCC0C C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 14), CC00CC0, &HC33707D6
CCCC0C C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 3), CC00CCC, &HF4D50D87
CCCC0C C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 8), CC0C000, &H455A14ED
CCCC0C C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 13), CC00C0C, &HA9E3E905
CCCC0C C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 2), CC00CC0, &HFCEFA3F8
CCCC0C C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 7), CC00CCC, &H676F02D9
CCCC0C C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 12), CC0C000, &H8D2A4C8A
CCCCC0 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 5), CC0C00C, &HFFFA3942
CCCCC0 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 8), CC0C0C0, &H8771F681
CCCCC0 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 11), CC0C0CC, &H6D9D6122
CCCCC0 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 14), CC0CC00, &HFDE5380C
CCCCC0 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 1), CC0C00C, &HA4BEEA44
CCCCC0 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 4), CC0C0C0, &H4BDECFA9
CCCCC0 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 7), CC0C0CC, &HF6BB4B60
CCCCC0 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 10), CC0CC00, &HBEBFBC70
CCCCC0 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 13), CC0C00C, &H289B7EC6
CCCCC0 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 0), CC0C0C0, &HEAA127FA
CCCCC0 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 3), CC0C0CC, &HD4EF3085
CCCCC0 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 6), CC0CC00, &H4881D05
CCCCC0 C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 9), CC0C00C, &HD9D4D039
CCCCC0 C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 12), CC0C0C0, &HE6DB99E5
CCCCC0 C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 15), CC0C0CC, &H1FA27CF8
CCCCC0 C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 2), CC0CC00, &HC4AC5665
CCCCCC C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 0), CC0CC0C, &HF4292244
CCCCCC C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 7), CC0CCC0, &H432AFF97
CCCCCC C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 14), CC0CCCC, &HAB9423A7
CCCCCC C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 5), CCC0000, &HFC93A039
CCCCCC C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 12), CC0CC0C, &H655B59C3
CCCCCC C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 3), CC0CCC0, &H8F0CCC92
CCCCCC C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 10), CC0CCCC, &HFFEFF47D
CCCCCC C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 1), CCC0000, &H85845DD1
CCCCCC C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 8), CC0CC0C, &H6FA87E4F
CCCCCC C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 15), CC0CCC0, &HFE2CE6E0
CCCCCC C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 6), CC0CCCC, &HA3014314
CCCCCC C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 13), CCC0000, &H4E0811A1
CCCCCC C0C0C0C, C0C0CC0, C0C0CCC, C0CC000, C00CCCC(C0C0000 + 4), CC0CC0C, &HF7537E82
CCCCCC C0CC000, C0C0C0C, C0C0CC0, C0C0CCC, C00CCCC(C0C0000 + 11), CC0CCC0, &HBD3AF235
CCCCCC C0C0CCC, C0CC000, C0C0C0C, C0C0CC0, C00CCCC(C0C0000 + 2), CC0CCCC, &H2AD7D2BB
CCCCCC C0C0CC0, C0C0CCC, C0CC000, C0C0C0C, C00CCCC(C0C0000 + 9), CCC0000, &HEB86D391
C0C0C0C = CC00CC(C0C0C0C, C0C000C)
C0C0CC0 = CC00CC(C0C0CC0, C0C00C0)
C0C0CCC = CC00CC(C0C0CCC, C0C00CC)
C0CC000 = CC00CC(C0CC000, C0C0C00)
Next
CCC0C0 = UCase(CCC00C(C0C0C0C) & CCC00C(C0C0CC0) & CCC00C(C0C0CCC) & CCC00C(C0CC000))
End Function
Function CCC0CC(ByVal C0C0CCC)
Dim C0CC00C, C0CC0C0, C0CC0CC
C0C0CCC = Replace(C0C0CCC, Chr(37) & ChrW(-243) & Chr(62), Chr(37) & Chr(62))
For C0CC0C0 = 1 To Len(C0C0CCC)
If C0CC0C0 <> C0CC0CC Then
C0CC00C = AscW(Mid(C0C0CCC, C0CC0C0, 1))
If C0CC00C >= 33 And C0CC00C <= 79 Then
CCC0CC = CCC0CC & Chr(C0CC00C + 47)
ElseIf C0CC00C >= 80 And C0CC00C <= 126 Then
CCC0CC = CCC0CC & Chr(C0CC00C - 47)
Else
C0CC0CC = C0CC0C0 + 1
If Mid(C0C0CCC, C0CC0CC, 1) = CCC0CC("o") Then CCC0CC = CCC0CC & ChrW(C0CC00C + 5) Else CCC0CC = CCC0CC & Mid(C0C0CCC, C0CC0C0, 1)
End If
End If
Next
End Function
%>